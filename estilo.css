/* 
====================================================================================================
                                            CARROSEL - SLIDE
====================================================================================================

Essenccial para todo inicio de CSS.

*/
body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    font-family: 'Lato', sans-serif;
}
/*
Esconder as scrollbar e fazer que o padding não espanda as tags pai.
*/
* {
    box-sizing: border-box;
    scrollbar-color: transparent transparent;
    scrollbar-width: 0px;
}
*::-webkit-scrollbar {
    width: 0;
}
*::-webkit-scrollbar-track {
    background: transparent;
}
*::-webkit-scrollbar-thumb {
    background: transparent;
    border: none;
}
* {
    -ms-overflow-style: none;
}
/*
Inicio do CSS
*/
ol, li {
    list-style: none;
    margin: 0;
    padding: 0;
}
.carousel {
    position: relative;
    padding-top: 0;
    height: 30vw;
    outline: none;
}
.carousel__viewport {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    overflow-x: scroll;
    height: 100%;
    outline: none;
}
/*

flex-grow: Controla a capacidade de um item flexível crescer para preencher 
o espaço disponível no contêiner flexível. Um valor de 0 significa que o 
item não deve crescer.

flex-shrink: Controla a capacidade de um item flexível encolher para caber 
no espaço disponível no contêiner flexível. Um valor de 0 significa que o 
item não deve encolher.

flex-basis: Define o tamanho inicial do item flexível antes de qualquer 
espaço adicional ser distribuído. Um valor de 100% significa que o item deve
ocupar 100% do espaço disponível no contêiner.

*/
.carousel__slide {
    position: relative;
    flex: 0 0 100%;
    width: 100%;
    outline: none;
}
/*

A propriedade content em CSS é usada para inserir conteúdo adicional
em elementos HTML. Ela é frequentemente usada em combinação com 
pseudoelementos (::before e ::after) para adicionar conteúdo decorativo
ou informativo a um elemento sem a necessidade de alterar o HTML.

Quando usada com o valor counter(), como em content: counter(item);, 
ela é usada para exibir o valor de um contador CSS. Os contadores CSS
são usados para contar elementos específicos em um documento HTML, como
itens de uma lista, por exemplo. A função counter() é usada para 
recuperar e exibir o valor de um contador específico.



No caso de transform: translate3d(-50%,-40%,70px);:

-50%: Isso move o elemento 50% do seu próprio tamanho para a esquerda em 
relação ao seu próprio ponto de origem (normalmente o centro do elemento). 
Isso é útil para centralizar horizontalmente um elemento em relação ao seu 
contêiner.

-40%: Isso move o elemento 40% do seu próprio tamanho para cima em relação 
ao seu próprio ponto de origem. Isso é útil para posicionar o elemento 
verticalmente em relação ao seu contêiner.

70px: Isso move o elemento 70 pixels para longe do espectador na direção 
z. Isso cria um efeito de profundidade tridimensional, onde o elemento 
parece estar mais distante do observador.

*/
.carousel__slide:before {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%,-40%,70px);
    color: #fff;
    font-size: 2em;
}
.carousel__snapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    scroll-snap-align: center;
  }
  
  @media (hover: hover) {
    .carousel__snapper {
      animation-name: snap;
      animation-timing-function: ease;
      animation-duration: 4s;
      animation-iteration-count: infinite;
    }
    
    .carousel__slide:last-child .carousel__snapper {
      animation-name: snap;
    }

   
  
  @keyframes snap {
    96% {
      scroll-snap-align: center;
    }
    97% {
      scroll-snap-align: none;
    }
    99% {
      scroll-snap-align: none;
    }
    100% {
      scroll-snap-align: center;
    }
  }
  
  @media (prefers-reduced-motion: reduce) {
    .carousel__snapper {
      animation-name: none;
    }
  }
  
  .carousel:hover .carousel__snapper,
  .carousel:focus-within .carousel__snapper {
    animation-name: none;
  }
  
  .carousel__navigation {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    text-align: center;
  }
  
  .carousel__navigation-list,
  .carousel__navigation-item {
    display: inline-block;
  }
  
  .carousel__navigation-button {
    display: inline-block;
    width: 1.5rem;
    height: 1.5rem;
    background-color: #333;
    background-clip: content-box;
    border: 0.25rem solid transparent;
    border-radius: 50%;
    font-size: 0;
    transition: transform 0.1s;
  }
  
  .carousel::before,
  .carousel::after,
  .carousel__prev,
  .carousel__next {
    position: absolute;
    top: 0;
    margin-top: 15%;
    width: 4rem;
    height: 4rem;
    transform: translateY(-50%);
    border-radius: 50%;
    font-size: 0;
    outline: 0;
  }
  
  .carousel::before,
  .carousel__prev {
    left: 1rem;
  }
  
  .carousel::after,
  .carousel__next {
    right: 1rem;
  }
  
  .carousel::before,
  .carousel::after {
    content: '';
    z-index: 1;
    background-color: #333;
    background-size: 1.5rem 1.5rem;
    background-repeat: no-repeat;
    background-position: center center;
    color: #fff;
    font-size: 2.5rem;
    line-height: 4rem;
    text-align: center;
    pointer-events: none;
  }
  
  .carousel::before {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolygon points='0,50 80,100 80,0' fill='%23fff'/%3E%3C/svg%3E");
  }
  
  .carousel::after {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolygon points='100,50 20,100 20,0' fill='%23fff'/%3E%3C/svg%3E");
  }
  

  .desktop{
    display:block;
  }
  .mobile{
    display: none;
  }
  .carousel__snapper{
    background-blend-mode: overlay;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }
  .active {
    background-color: red;
    color: red;
}

  @media screen and (max-width:500px){
    .desktop{
        display:none;
      }
      .mobile{
        display: block;
      }
      .carousel {
        height: 70vw;
      }
  }